#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x20000
#define ONCHIP_MEMORY2_0_SPAN 65536
#define ONCHIP_MEMORY2_0_END 0x2ffff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'TERASIC_AUTO_FOCUS_0', class 'TERASIC_AUTO_FOCUS'
 * The macros are prefixed with 'TERASIC_AUTO_FOCUS_0_'.
 * The prefix is the slave descriptor.
 */
#define TERASIC_AUTO_FOCUS_0_COMPONENT_TYPE TERASIC_AUTO_FOCUS
#define TERASIC_AUTO_FOCUS_0_COMPONENT_NAME TERASIC_AUTO_FOCUS_0
#define TERASIC_AUTO_FOCUS_0_BASE 0x41000
#define TERASIC_AUTO_FOCUS_0_SPAN 32
#define TERASIC_AUTO_FOCUS_0_END 0x4101f

/*
 * Macros for device 'timer', class 'altera_avalon_timer'
 * The macros are prefixed with 'TIMER_'.
 * The prefix is the slave descriptor.
 */
#define TIMER_COMPONENT_TYPE altera_avalon_timer
#define TIMER_COMPONENT_NAME timer
#define TIMER_BASE 0x41020
#define TIMER_SPAN 32
#define TIMER_END 0x4103f
#define TIMER_IRQ 5
#define TIMER_ALWAYS_RUN 0
#define TIMER_COUNTER_SIZE 32
#define TIMER_FIXED_PERIOD 0
#define TIMER_FREQ 50000000
#define TIMER_LOAD_VALUE 49999
#define TIMER_MULT 0.001
#define TIMER_PERIOD 1
#define TIMER_PERIOD_UNITS ms
#define TIMER_RESET_OUTPUT 0
#define TIMER_SNAPSHOT 1
#define TIMER_TICKS_PER_SEC 1000
#define TIMER_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'i2c_opencores_camera', class 'i2c_opencores'
 * The macros are prefixed with 'I2C_OPENCORES_CAMERA_'.
 * The prefix is the slave descriptor.
 */
#define I2C_OPENCORES_CAMERA_COMPONENT_TYPE i2c_opencores
#define I2C_OPENCORES_CAMERA_COMPONENT_NAME i2c_opencores_camera
#define I2C_OPENCORES_CAMERA_BASE 0x41040
#define I2C_OPENCORES_CAMERA_SPAN 32
#define I2C_OPENCORES_CAMERA_END 0x4105f
#define I2C_OPENCORES_CAMERA_IRQ 4

/*
 * Macros for device 'i2c_opencores_mipi', class 'i2c_opencores'
 * The macros are prefixed with 'I2C_OPENCORES_MIPI_'.
 * The prefix is the slave descriptor.
 */
#define I2C_OPENCORES_MIPI_COMPONENT_TYPE i2c_opencores
#define I2C_OPENCORES_MIPI_COMPONENT_NAME i2c_opencores_mipi
#define I2C_OPENCORES_MIPI_BASE 0x41060
#define I2C_OPENCORES_MIPI_SPAN 32
#define I2C_OPENCORES_MIPI_END 0x4107f
#define I2C_OPENCORES_MIPI_IRQ 3

/*
 * Macros for device 'mipi_pwdn_n', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIPI_PWDN_N_'.
 * The prefix is the slave descriptor.
 */
#define MIPI_PWDN_N_COMPONENT_TYPE altera_avalon_pio
#define MIPI_PWDN_N_COMPONENT_NAME mipi_pwdn_n
#define MIPI_PWDN_N_BASE 0x41080
#define MIPI_PWDN_N_SPAN 16
#define MIPI_PWDN_N_END 0x4108f
#define MIPI_PWDN_N_BIT_CLEARING_EDGE_REGISTER 0
#define MIPI_PWDN_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIPI_PWDN_N_CAPTURE 0
#define MIPI_PWDN_N_DATA_WIDTH 1
#define MIPI_PWDN_N_DO_TEST_BENCH_WIRING 0
#define MIPI_PWDN_N_DRIVEN_SIM_VALUE 0
#define MIPI_PWDN_N_EDGE_TYPE NONE
#define MIPI_PWDN_N_FREQ 50000000
#define MIPI_PWDN_N_HAS_IN 0
#define MIPI_PWDN_N_HAS_OUT 1
#define MIPI_PWDN_N_HAS_TRI 0
#define MIPI_PWDN_N_IRQ_TYPE NONE
#define MIPI_PWDN_N_RESET_VALUE 0

/*
 * Macros for device 'mipi_reset_n', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIPI_RESET_N_'.
 * The prefix is the slave descriptor.
 */
#define MIPI_RESET_N_COMPONENT_TYPE altera_avalon_pio
#define MIPI_RESET_N_COMPONENT_NAME mipi_reset_n
#define MIPI_RESET_N_BASE 0x41090
#define MIPI_RESET_N_SPAN 16
#define MIPI_RESET_N_END 0x4109f
#define MIPI_RESET_N_BIT_CLEARING_EDGE_REGISTER 0
#define MIPI_RESET_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIPI_RESET_N_CAPTURE 0
#define MIPI_RESET_N_DATA_WIDTH 1
#define MIPI_RESET_N_DO_TEST_BENCH_WIRING 0
#define MIPI_RESET_N_DRIVEN_SIM_VALUE 0
#define MIPI_RESET_N_EDGE_TYPE NONE
#define MIPI_RESET_N_FREQ 50000000
#define MIPI_RESET_N_HAS_IN 0
#define MIPI_RESET_N_HAS_OUT 1
#define MIPI_RESET_N_HAS_TRI 0
#define MIPI_RESET_N_IRQ_TYPE NONE
#define MIPI_RESET_N_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x410d0
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x410d7
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1526636581

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x410d8
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0x410df
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


#endif /* _ALTERA_HPS_0_H_ */
